use crate::pins::Pin;

#[repr(u8)]
pub enum Alternate {
    Default = 0,
    Gpio = 1,
    Alt2 = 2,
    Alt3 = 3,
    Alt4 = 4,
    Alt5 = 5,
    Alt6 = 6,
    Alt7 = 7,
}

impl From<Alternate> for u8 {
    fn from(value: Alternate) -> Self {
        value as u8
    }
}

#[allow(clippy::too_many_lines)]
pub fn set_alternate<P: Pin>(alternate: Alternate) {
    let p = unsafe { pac::Peripherals::steal() };

    match (P::PORT, P::INDEX) {
        (0, 0) => p.porta.pcr0().write(|w| w.mux().set(alternate.into())),
        (0, 1) => p.porta.pcr1().write(|w| w.mux().set(alternate.into())),
        (0, 2) => p.porta.pcr2().write(|w| w.mux().set(alternate.into())),
        (0, 3) => p.porta.pcr3().write(|w| w.mux().set(alternate.into())),
        (0, 4) => p.porta.pcr4().write(|w| w.mux().set(alternate.into())),
        (0, 5) => p.porta.pcr5().write(|w| w.mux().set(alternate.into())),
        (0, 6) => p.porta.pcr6().write(|w| w.mux().set(alternate.into())),
        (0, 7) => p.porta.pcr7().write(|w| w.mux().set(alternate.into())),
        (0, 8) => p.porta.pcr8().write(|w| w.mux().set(alternate.into())),
        (0, 9) => p.porta.pcr9().write(|w| w.mux().set(alternate.into())),
        (0, 10) => p.porta.pcr10().write(|w| w.mux().set(alternate.into())),
        (0, 11) => p.porta.pcr11().write(|w| w.mux().set(alternate.into())),
        (0, 12) => p.porta.pcr12().write(|w| w.mux().set(alternate.into())),
        (0, 13) => p.porta.pcr13().write(|w| w.mux().set(alternate.into())),
        (0, 14) => p.porta.pcr14().write(|w| w.mux().set(alternate.into())),
        (0, 15) => p.porta.pcr15().write(|w| w.mux().set(alternate.into())),
        (0, 16) => p.porta.pcr16().write(|w| w.mux().set(alternate.into())),
        (0, 17) => p.porta.pcr17().write(|w| w.mux().set(alternate.into())),
        (0, 18) => p.porta.pcr18().write(|w| w.mux().set(alternate.into())),
        (0, 19) => p.porta.pcr19().write(|w| w.mux().set(alternate.into())),
        (0, 20) => p.porta.pcr20().write(|w| w.mux().set(alternate.into())),
        (0, 21) => p.porta.pcr21().write(|w| w.mux().set(alternate.into())),
        (0, 22) => p.porta.pcr22().write(|w| w.mux().set(alternate.into())),
        (0, 23) => p.porta.pcr23().write(|w| w.mux().set(alternate.into())),
        (0, 24) => p.porta.pcr24().write(|w| w.mux().set(alternate.into())),
        (0, 25) => p.porta.pcr25().write(|w| w.mux().set(alternate.into())),
        (0, 26) => p.porta.pcr26().write(|w| w.mux().set(alternate.into())),
        (0, 27) => p.porta.pcr27().write(|w| w.mux().set(alternate.into())),
        (0, 28) => p.porta.pcr28().write(|w| w.mux().set(alternate.into())),
        (0, 29) => p.porta.pcr29().write(|w| w.mux().set(alternate.into())),
        (0, 30) => p.porta.pcr30().write(|w| w.mux().set(alternate.into())),
        (0, 31) => p.porta.pcr31().write(|w| w.mux().set(alternate.into())),

        (1, 0) => p.portb.pcr0().write(|w| w.mux().set(alternate.into())),
        (1, 1) => p.portb.pcr1().write(|w| w.mux().set(alternate.into())),
        (1, 2) => p.portb.pcr2().write(|w| w.mux().set(alternate.into())),
        (1, 3) => p.portb.pcr3().write(|w| w.mux().set(alternate.into())),
        (1, 4) => p.portb.pcr4().write(|w| w.mux().set(alternate.into())),
        (1, 5) => p.portb.pcr5().write(|w| w.mux().set(alternate.into())),
        (1, 6) => p.portb.pcr6().write(|w| w.mux().set(alternate.into())),
        (1, 7) => p.portb.pcr7().write(|w| w.mux().set(alternate.into())),
        (1, 8) => p.portb.pcr8().write(|w| w.mux().set(alternate.into())),
        (1, 9) => p.portb.pcr9().write(|w| w.mux().set(alternate.into())),
        (1, 10) => p.portb.pcr10().write(|w| w.mux().set(alternate.into())),
        (1, 11) => p.portb.pcr11().write(|w| w.mux().set(alternate.into())),
        (1, 12) => p.portb.pcr12().write(|w| w.mux().set(alternate.into())),
        (1, 13) => p.portb.pcr13().write(|w| w.mux().set(alternate.into())),
        (1, 14) => p.portb.pcr14().write(|w| w.mux().set(alternate.into())),
        (1, 15) => p.portb.pcr15().write(|w| w.mux().set(alternate.into())),
        (1, 16) => p.portb.pcr16().write(|w| w.mux().set(alternate.into())),
        (1, 17) => p.portb.pcr17().write(|w| w.mux().set(alternate.into())),
        (1, 18) => p.portb.pcr18().write(|w| w.mux().set(alternate.into())),
        (1, 19) => p.portb.pcr19().write(|w| w.mux().set(alternate.into())),
        (1, 20) => p.portb.pcr20().write(|w| w.mux().set(alternate.into())),
        (1, 21) => p.portb.pcr21().write(|w| w.mux().set(alternate.into())),
        (1, 22) => p.portb.pcr22().write(|w| w.mux().set(alternate.into())),
        (1, 23) => p.portb.pcr23().write(|w| w.mux().set(alternate.into())),
        (1, 24) => p.portb.pcr24().write(|w| w.mux().set(alternate.into())),
        (1, 25) => p.portb.pcr25().write(|w| w.mux().set(alternate.into())),
        (1, 26) => p.portb.pcr26().write(|w| w.mux().set(alternate.into())),
        (1, 27) => p.portb.pcr27().write(|w| w.mux().set(alternate.into())),
        (1, 28) => p.portb.pcr28().write(|w| w.mux().set(alternate.into())),
        (1, 29) => p.portb.pcr29().write(|w| w.mux().set(alternate.into())),
        (1, 30) => p.portb.pcr30().write(|w| w.mux().set(alternate.into())),
        (1, 31) => p.portb.pcr31().write(|w| w.mux().set(alternate.into())),

        (2, 0) => p.portc.pcr0().write(|w| w.mux().set(alternate.into())),
        (2, 1) => p.portc.pcr1().write(|w| w.mux().set(alternate.into())),
        (2, 2) => p.portc.pcr2().write(|w| w.mux().set(alternate.into())),
        (2, 3) => p.portc.pcr3().write(|w| w.mux().set(alternate.into())),
        (2, 4) => p.portc.pcr4().write(|w| w.mux().set(alternate.into())),
        (2, 5) => p.portc.pcr5().write(|w| w.mux().set(alternate.into())),
        (2, 6) => p.portc.pcr6().write(|w| w.mux().set(alternate.into())),
        (2, 7) => p.portc.pcr7().write(|w| w.mux().set(alternate.into())),
        (2, 8) => p.portc.pcr8().write(|w| w.mux().set(alternate.into())),
        (2, 9) => p.portc.pcr9().write(|w| w.mux().set(alternate.into())),
        (2, 10) => p.portc.pcr10().write(|w| w.mux().set(alternate.into())),
        (2, 11) => p.portc.pcr11().write(|w| w.mux().set(alternate.into())),
        (2, 12) => p.portc.pcr12().write(|w| w.mux().set(alternate.into())),
        (2, 13) => p.portc.pcr13().write(|w| w.mux().set(alternate.into())),
        (2, 14) => p.portc.pcr14().write(|w| w.mux().set(alternate.into())),
        (2, 15) => p.portc.pcr15().write(|w| w.mux().set(alternate.into())),
        (2, 16) => p.portc.pcr16().write(|w| w.mux().set(alternate.into())),
        (2, 17) => p.portc.pcr17().write(|w| w.mux().set(alternate.into())),
        (2, 18) => p.portc.pcr18().write(|w| w.mux().set(alternate.into())),
        (2, 19) => p.portc.pcr19().write(|w| w.mux().set(alternate.into())),
        (2, 20) => p.portc.pcr20().write(|w| w.mux().set(alternate.into())),
        (2, 21) => p.portc.pcr21().write(|w| w.mux().set(alternate.into())),
        (2, 22) => p.portc.pcr22().write(|w| w.mux().set(alternate.into())),
        (2, 23) => p.portc.pcr23().write(|w| w.mux().set(alternate.into())),
        (2, 24) => p.portc.pcr24().write(|w| w.mux().set(alternate.into())),
        (2, 25) => p.portc.pcr25().write(|w| w.mux().set(alternate.into())),
        (2, 26) => p.portc.pcr26().write(|w| w.mux().set(alternate.into())),
        (2, 27) => p.portc.pcr27().write(|w| w.mux().set(alternate.into())),
        (2, 28) => p.portc.pcr28().write(|w| w.mux().set(alternate.into())),
        (2, 29) => p.portc.pcr29().write(|w| w.mux().set(alternate.into())),
        (2, 30) => p.portc.pcr30().write(|w| w.mux().set(alternate.into())),
        (2, 31) => p.portc.pcr31().write(|w| w.mux().set(alternate.into())),

        (3, 0) => p.portd.pcr0().write(|w| w.mux().set(alternate.into())),
        (3, 1) => p.portd.pcr1().write(|w| w.mux().set(alternate.into())),
        (3, 2) => p.portd.pcr2().write(|w| w.mux().set(alternate.into())),
        (3, 3) => p.portd.pcr3().write(|w| w.mux().set(alternate.into())),
        (3, 4) => p.portd.pcr4().write(|w| w.mux().set(alternate.into())),
        (3, 5) => p.portd.pcr5().write(|w| w.mux().set(alternate.into())),
        (3, 6) => p.portd.pcr6().write(|w| w.mux().set(alternate.into())),
        (3, 7) => p.portd.pcr7().write(|w| w.mux().set(alternate.into())),
        (3, 8) => p.portd.pcr8().write(|w| w.mux().set(alternate.into())),
        (3, 9) => p.portd.pcr9().write(|w| w.mux().set(alternate.into())),
        (3, 10) => p.portd.pcr10().write(|w| w.mux().set(alternate.into())),
        (3, 11) => p.portd.pcr11().write(|w| w.mux().set(alternate.into())),
        (3, 12) => p.portd.pcr12().write(|w| w.mux().set(alternate.into())),
        (3, 13) => p.portd.pcr13().write(|w| w.mux().set(alternate.into())),
        (3, 14) => p.portd.pcr14().write(|w| w.mux().set(alternate.into())),
        (3, 15) => p.portd.pcr15().write(|w| w.mux().set(alternate.into())),
        (3, 16) => p.portd.pcr16().write(|w| w.mux().set(alternate.into())),
        (3, 17) => p.portd.pcr17().write(|w| w.mux().set(alternate.into())),
        (3, 18) => p.portd.pcr18().write(|w| w.mux().set(alternate.into())),
        (3, 19) => p.portd.pcr19().write(|w| w.mux().set(alternate.into())),
        (3, 20) => p.portd.pcr20().write(|w| w.mux().set(alternate.into())),
        (3, 21) => p.portd.pcr21().write(|w| w.mux().set(alternate.into())),
        (3, 22) => p.portd.pcr22().write(|w| w.mux().set(alternate.into())),
        (3, 23) => p.portd.pcr23().write(|w| w.mux().set(alternate.into())),
        (3, 24) => p.portd.pcr24().write(|w| w.mux().set(alternate.into())),
        (3, 25) => p.portd.pcr25().write(|w| w.mux().set(alternate.into())),
        (3, 26) => p.portd.pcr26().write(|w| w.mux().set(alternate.into())),
        (3, 27) => p.portd.pcr27().write(|w| w.mux().set(alternate.into())),
        (3, 28) => p.portd.pcr28().write(|w| w.mux().set(alternate.into())),
        (3, 29) => p.portd.pcr29().write(|w| w.mux().set(alternate.into())),
        (3, 30) => p.portd.pcr30().write(|w| w.mux().set(alternate.into())),
        (3, 31) => p.portd.pcr31().write(|w| w.mux().set(alternate.into())),

        (4, 0) => p.porte.pcr0().write(|w| w.mux().set(alternate.into())),
        (4, 1) => p.porte.pcr1().write(|w| w.mux().set(alternate.into())),
        (4, 2) => p.porte.pcr2().write(|w| w.mux().set(alternate.into())),
        (4, 3) => p.porte.pcr3().write(|w| w.mux().set(alternate.into())),
        (4, 4) => p.porte.pcr4().write(|w| w.mux().set(alternate.into())),
        (4, 5) => p.porte.pcr5().write(|w| w.mux().set(alternate.into())),
        (4, 6) => p.porte.pcr6().write(|w| w.mux().set(alternate.into())),
        (4, 7) => p.porte.pcr7().write(|w| w.mux().set(alternate.into())),
        (4, 8) => p.porte.pcr8().write(|w| w.mux().set(alternate.into())),
        (4, 9) => p.porte.pcr9().write(|w| w.mux().set(alternate.into())),
        (4, 10) => p.porte.pcr10().write(|w| w.mux().set(alternate.into())),
        (4, 11) => p.porte.pcr11().write(|w| w.mux().set(alternate.into())),
        (4, 12) => p.porte.pcr12().write(|w| w.mux().set(alternate.into())),
        (4, 13) => p.porte.pcr13().write(|w| w.mux().set(alternate.into())),
        (4, 14) => p.porte.pcr14().write(|w| w.mux().set(alternate.into())),
        (4, 15) => p.porte.pcr15().write(|w| w.mux().set(alternate.into())),
        (4, 16) => p.porte.pcr16().write(|w| w.mux().set(alternate.into())),
        (4, 17) => p.porte.pcr17().write(|w| w.mux().set(alternate.into())),
        (4, 18) => p.porte.pcr18().write(|w| w.mux().set(alternate.into())),
        (4, 19) => p.porte.pcr19().write(|w| w.mux().set(alternate.into())),
        (4, 20) => p.porte.pcr20().write(|w| w.mux().set(alternate.into())),
        (4, 21) => p.porte.pcr21().write(|w| w.mux().set(alternate.into())),
        (4, 22) => p.porte.pcr22().write(|w| w.mux().set(alternate.into())),
        (4, 23) => p.porte.pcr23().write(|w| w.mux().set(alternate.into())),
        (4, 24) => p.porte.pcr24().write(|w| w.mux().set(alternate.into())),
        (4, 25) => p.porte.pcr25().write(|w| w.mux().set(alternate.into())),
        (4, 26) => p.porte.pcr26().write(|w| w.mux().set(alternate.into())),
        (4, 27) => p.porte.pcr27().write(|w| w.mux().set(alternate.into())),
        (4, 28) => p.porte.pcr28().write(|w| w.mux().set(alternate.into())),
        (4, 29) => p.porte.pcr29().write(|w| w.mux().set(alternate.into())),
        (4, 30) => p.porte.pcr30().write(|w| w.mux().set(alternate.into())),
        (4, 31) => p.porte.pcr31().write(|w| w.mux().set(alternate.into())),

        _ => unreachable!(),
    };
}
